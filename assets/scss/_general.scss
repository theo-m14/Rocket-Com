* {
    list-style-type: none;
    padding: 0;
    margin:0;
    text-decoration: none;
}

@font-face {
    font-family: Signika;
    src: url(../fonts/SignikaNegative-Regular.ttf);
}

@font-face {
    font-family: Varela;
    src: url(../fonts/VarelaRound-Regular.ttf);
}

h1, h2, h3, h4 {
    font-family: Varela;
}

html, body {
	scroll-behavior: smooth;
}

body {
    font-family: Signika;
    position: relative;
}

a{
    color: black;
}

h1{
    font-size: 16px;
    span{
        position: relative;
        z-index: 2;
        // Bloc de couleur sous le titre
        &::after{
            content: "";
            width: 150%;
            height: .4em;
            background-color: $lightenSecondary;
            z-index: -1;
            position: absolute;
            bottom: 0;
            left: 0;
            transform: translateX(-20%);
            clip-path: polygon(20% 0, 92% 0, 85% 100%, 13% 100%);
        }
    }
}

.triangle{
    width: 13vw;
    height: 12vw;
    position: absolute;
    overflow: visible;
}

.triangle-blue{
    background-color: $secondaryColor;
}

.triangleBlack{
    background-color: $black;
    overflow: visible;
}

.triangleTop{
    position: absolute;
    top: -1px;
    right: 0%;
    width: 18%;
    height: 8vw;
    background-color: $primaryColor;
    clip-path: polygon(50% 100%, 0 0, 100% 0);
}

.triangle-left{
    clip-path: polygon(100% 50%, 0 0, 0 100%);
    top: 0;
    left: 0;
    transform: translateY(-50%);
    overflow: visible;
}

.triangleRight{
    clip-path: polygon(100% 0, 0 50%, 100% 100%);
    top: 0;
    right: 0;
    transform: translateY(-50%);
    background-color:$secondaryColor;
    overflow: visible;
}

.triangleBottom{
    clip-path: polygon(50% 100%, 0 0, 100% 0);
    top: 0;
    width: 250px;
    height: 150px;
    background-color: $primaryColor;
}

.chevron{
    width: 5.5vw;
    height: 5.5vw;
    background-color: $black;
    cursor: pointer;
    overflow: hidden;
    @include transi;
}

.chevronDroite{
    clip-path: polygon(0 0, 100% 50%, 0 100%, 25% 50%);
    &:hover{
        transform: rotate(0deg) translateX(20%);
    }
}

.chevronGauche{
    clip-path: polygon(0 50%, 100% 0, 70% 50%, 100% 100%);
    &:hover{
        transform: rotate(0deg) translateX(-20%);
    }
}

.fa-instagram{
    color: white;
    background: linear-gradient(182deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%);
    background-clip: text;
    -webkit-background-clip: text;
    -moz-background-clip: text;
   -webkit-text-fill-color: transparent;
}

.fa-twitter{
    color: #76A9EA;
}
.fa-facebook{
    color: #475993;
}

// class lié aux animations de fade + mouvement
.reveal{
    position: relative;
    opacity: 0;
}

.reveal.active{
    opacity: 1;
}

.reveal.active.fadeFromLeft{
    animation: fadeFromLeft 1.5s ease;
}

.reveal.active.fadeFromRight{
    animation: fadeFromRight 1.5s ease;
}

.reveal.active.fadeFromBottom{
    animation: fadeFromBottom 1.5s ease;
}

// animations pour les chevrons 
.reveal.active.fadeFromLeftChevron{
    animation: fadeFromLeft 1.5s ease, bounceChevronLeft 3s 1.5s infinite ease-in-out;
}

.reveal.active.fadeFromRightChevron{
    animation: fadeFromRight 1.5s ease, bounceChevronRight 3s 1.5s infinite ease-in-out;
}

// chevron droite desktop de l'équipe avec moins de translateX pour eviter la barre de scroll
.reveal.active.fadeFromRightChevronEquipe{
    animation: fadeFromRightChevronEquipe 1.5s ease, bounceChevronRight 3s 1.5s infinite ease-in-out;
}

// si les chevrons n'ont pas la classe reveal (js) il y aura quand même l'animationd de bounce
.active.fadeFromRightChevron{
    animation: bounceChevronRight 3s 1.5s infinite ease-in-out;
} 

.active.fadeFromLeftChevron{
    animation: bounceChevronLeft 3s 1.5s infinite ease-in-out;
}

// animations pour les deux chevrons de la galerie en desktop
.reveal.active.fadeFromLeftChevronGalerie{
    animation: fadeFromLeftChevronGalerie 1.5s ease, bounceChevronLeftGalerie 3s 1.5s infinite ease-in-out;
}

.reveal.active.fadeFromRightChevronGalerie{
    animation: fadeFromRightChevronGalerie 1.5s ease, bounceChevronRightGalerie 3s 1.5s infinite ease-in-out;
}

//les animations selon la direction d'apparition avec opacity + mouvement avec translate
@keyframes fadeFromLeft {
    0%{ transform: translateX(-100px); opacity: 0;}
    100%{ transform: translateX(0); opacity: 1;}
}

@keyframes fadeFromRight {
    0%{ transform: translateX(100px); opacity: 0;}
    100%{ transform: translateX(0); opacity: 1;}
}

@keyframes fadeFromBottom {
    0%{ transform: translateY(100px); opacity: 0;}
    100%{ transform: translateY(0); opacity: 1;}
}

// animations plus spécifique pour certains éléments
@keyframes fadeFromLeftChevronGalerie {
    from{ transform: translateX(-200%); opacity: 0;}
    to{ transform: translateX(-50%); opacity: 1;}
}

@keyframes fadeFromRightChevronGalerie {
    from{ transform: translateX(200%); opacity: 0;}
    to{ transform: translate(50%,-100%); opacity: 1;}
}

@keyframes fadeFromRightChevronEquipe {
    0%{ transform: translateX(20%); opacity: 0;}
    100%{ transform: translateX(0); opacity: 1;}
}

// animation bounce pour le bouton retour en haut de la page
.bounce {
    animation: bounce 2s infinite ease-in-out;
}

@keyframes bounce {
    0%   { transform: scale(1,1)    translateY(0); }
    10%  { transform: scale(1.1,.9) translateY(0); }
    30%  { transform: scale(.9,1.1) translateY(-30%); }
    50%  { transform: scale(1,1)    translateY(0); }
    100% { transform: scale(1,1)    translateY(0); }
}

// animation constante pour les chevrons
@keyframes bounceChevronLeft {
    0%   { transform: translateX(0); }
    50%  { transform: translateX(-15%); }
    100% { transform: translateX(0); }
}

@keyframes bounceChevronRight {
    0%   { transform: translateX(0); }
    50%  { transform: translateX(15%); }
    100% { transform: translateX(0); }
}

@keyframes bounceChevronLeftGalerie {
    0%   { transform: translateX(-50%); }
    50%  { transform: translateX(-60%); }
    100% { transform: translateX(-50%); }
}

@keyframes bounceChevronRightGalerie {
    0%   { transform: translate(50%,-100%); }
    50%  { transform: translate(70%,-100%); }
    100% { transform: translate(50%,-100%); }
}